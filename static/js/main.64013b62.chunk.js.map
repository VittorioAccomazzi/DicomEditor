{"version":3,"sources":["common/utils.ts","dicom/DicomTagValue.ts","dicom/DicomTagList.ts","dicom/DicomTags.ts","dicom/DicomDataset.ts","dicom/DicomUIDReplacer.ts","dicom/DicomEditor.ts","components/linearProgressWithLabel.tsx","AppStyle.ts","components/hList.tsx","features/appMain/appHeader.tsx","components/vList.tsx","components/collapseButton.tsx","features/appMain/parts/tagValue.tsx","features/appMain/parts/tagList.tsx","features/appMain/parts/image.tsx","features/appMain/parts/series.tsx","features/appMain/parts/study.tsx","features/appMain/parts/patient.tsx","features/appMain/parts/patientList.tsx","features/appMain/appResults.tsx","features/appMain/appMain.tsx","features/appVersion/appVersion.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["foreachImage","patients","patient","patIndex","indexOf","studies","study","stuIndex","series","serindex","images","image","imgIndex","f","numberOfFiles","num","files","length","fixDigit","val","numDigit","str","Math","round","toString","repeat","vrConstrains","vr","len","isNumeric","DicomTagValue","tag","org","other","this","name","hide","compare","value","doSet","cnstr","find","c","map","char","includes","reduce","prev","curr","enumeratedValues","undefined","v","month","day","parseInt","substr","push","DicomTagList","dcm","tags","list","forEach","get","Value","thisList","filter","isCompare","otherList","iseq","oVal","isSame","some","valueList","valueTag","isModified","has","dcmTag","set","el","addOtherValue","PatientTags","StudyTags","SeriesTags","ImageTags","DicomMessage","require","data","DicomDataset","inBuffer","dataset","readFile","getDict","Error","write","allowInvalidVRLength","fragmentMultiframe","startsWith","meta","dict","DicomUidReplacer","studyUIDs","Map","seriesUIDs","studyUID","seriesUID","instanceUID","getStudyUID","getSeriesUID","newUID","uid","time","Date","getTime","rnd","random","tail","studyUIDTag","seriesUIDTag","instanceUIDTag","DicomEditor","progress","endsWith","sanityCheck","pat","stu","ser","img","add","done","total","info","replaceUID","zip","JSZip","repUID","count","s","file","Modify","replaceUIDs","outB","filename","imageFilename","binary","createFolders","generateAsync","type","percent","zipFile","newUIDs","replace","p","isEqual","Merge","i","Promise","res","reader","FileReader","onloadend","result","readAsArrayBuffer","view","Uint8Array","isValid","ThickLinearProgress","withStyles","root","height","borderRadius","bar","LinearProgress","LinearProgressWithLabel","props","Box","sx","display","width","alignItems","mr","variant","minWidth","Typography","className","useStyles","makeStyles","theme","paper","boldtext","fontWeight","marginLeft","spacing","marginRight","smallText","fontSize","noPadding","padding","rightMargin","leftMargin","topBottomMarging","marginBottom","marginTop","topBottomPadding","paddingBottom","paddingTop","fullPage","position","top","left","borderWidth","borderStyle","borderColor","palette","primary","light","justifyContent","flexDirection","patAvatar","stuAvatar","serAvatar","imgAvatar","HList","align","children","AppHeader","numDicomFiles","onDownload","useState","checked","setChecked","classes","useStyle","Paper","elevation","color","Checkbox","onClick","Button","VList","right","bottom","paddingLeft","paddingRight","boxSizing","expand","transform","transition","transitions","create","duration","shortest","expandOpen","CollapseButton","onExpand","size","React","IconButton","clsx","TagValue","error","setError","otherValues","join","TextField","id","label","defaultValue","style","onChange","e","setValue","trim","onValueChange","target","InputProps","endAdornment","InputAdornment","Tooltip","title","TagList","subItemText","subItemNum","avatarText","avatarColor","collapsed","setCollapsed","Hidden","xsDown","Avatar","backgroundColor","Grid","container","isHidden","index","item","flex","Collapse","in","Series","textAlign","Study","Patient","PatientList","processingLabel","AppResults","dcmInfo","setLabel","downloading","setDownloading","setProgress","useCallback","mode","then","url","blob","Blob","bURL","URL","createObjectURL","link","document","createElement","setAttribute","click","setTimeout","revokeObjectURL","Container","maxWidth","drop","dark","noDisplay","AppMain","dicomFilesInfo","setDicomFilesInfo","onDrop","a","Extact","useDropzone","getRootProps","getInputProps","isDragActive","version","main","transformOrigin","ribbon","AppVersion","baseURL","forkme","href","src","alt","gitVersion","long","window","location","createTheme","blue","secondary","background","default","createStyles","app","CssBaseline","smDown","store","configureStore","reducer","Boolean","hostname","match","ga4react","GA4React","initialize","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.64013b62.chunk.js","sourcesContent":["import { ImageInfo, PatientInfo, SeriesInfo, StudyInfo } from \"../dicom/DicomEditor\"\n\nexport default async function wait(ms:number) : Promise<void> {\n    return new Promise((res)=>{ setTimeout(res,ms)  })\n}\n\nexport interface DicomHierarchy {\n    patient  : PatientInfo,\n    study    : StudyInfo,\n    series   : SeriesInfo,\n    image    : ImageInfo\n    patIndex : number,\n    stuIndex : number,\n    serindex : number,\n    imgIndex : number\n}\nexport function *foreachImage(patients: PatientInfo []):Generator<DicomHierarchy> {\n    for( const patient of patients){\n        const patIndex = patients.indexOf(patient)\n        for( const study of patient.studies ){\n            const stuIndex = patient.studies.indexOf(study)\n            for( const series of study.series ){\n                const serindex = study.series.indexOf(series)\n                for( const image of series.images ){\n                    const imgIndex = series.images.indexOf(image)\n                    yield {patient,study,series,image, patIndex,stuIndex,serindex,imgIndex}\n                }\n            }\n        }\n    }\n}\n\nexport function numberOfFiles( patients : PatientInfo []) : number {\n    let num =0;\n    for( const {image} of foreachImage(patients)) {\n        num += image.files.length\n    }\n    return num\n}\n\nexport function fixDigit(val:number, numDigit:number ) : string {\n    const str  = Math.round(val).toString()\n    let num =  numDigit > str.length ?  numDigit-str.length : 0\n    return '0'.repeat(num)+str\n}","import { DicomTagDefinition } from \"./DicomTags\";\n\n\ninterface vrConstrain {\n    vr : string,\n    len: number,\n    isNumeric : boolean\n}\n\n// see http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_6.2.html\nconst vrConstrains : vrConstrain [] =[\n    {\n        vr: \"AE\",\n        len: 16,\n        isNumeric: false\n    },\n    {\n        vr: \"AS\",\n        len: 4,\n        isNumeric: false\n    },\n    {\n        vr: \"AT\",\n        len: 4,\n        isNumeric: false\n    },\n    {\n        vr: \"CS\",\n        len: 16,\n        isNumeric: false\n    },\n    {\n        vr: \"DA\",\n        len: 8,\n        isNumeric: false\n    },\n    {\n        vr: \"DS\",\n        len: 16,\n        isNumeric: true\n    },\n    {\n        vr: \"DT\",\n        len: 26,\n        isNumeric: true\n    },\n    {\n        vr: \"IS\",\n        len: 12,\n        isNumeric: true\n    },\n    {\n        vr: \"LO\",\n        len: 64,\n        isNumeric: false\n    },\n    {\n        vr: \"LT\",\n        len: 10240,\n        isNumeric: false\n    },\n    {\n        vr: \"OB\",\n        len: 100,\n        isNumeric: false\n    },\n    {\n        vr: \"OD\",\n        len: 100,\n        isNumeric: false\n    },\n    {\n        vr: \"OF\",\n        len: 100,\n        isNumeric: false\n    },\n    {\n        vr: \"SH\",\n        len: 16,\n        isNumeric: false\n    },\n    {\n        vr: \"ST\",\n        len: 1024,\n        isNumeric: false\n    },\n    {\n        vr: \"TM\",\n        len: 14,\n        isNumeric: true\n    },\n    {\n        vr: \"UI\",\n        len: 64,\n        isNumeric: true\n    }\n\n]\n\nexport default class DicomTagValue {\n\n    private tag : DicomTagDefinition\n    private val : string\n    private vr  : string\n    private org : string\n    private other : string []\n\n    constructor( tag : DicomTagDefinition, vr : string, val : string ){\n        this.tag=tag\n        this.val=val\n        this.org=val\n        this.vr=vr\n        this.other=[]\n    }   \n\n    /**\n     * Dicom Tag name\n     */\n    public get name() : string {\n        return this.tag.name\n    }\n\n    /**\n     * Dicom Tag Value\n     */\n    public get value() : string {\n        return this.val\n    }\n\n    /**\n     * true if the value has been set after creation\n     */\n    public get isModified(): boolean {\n        return this.org !== this.val\n    }\n\n    /**\n     * false if needs to be displayed to the user\n     */\n    public get isHidden() : boolean {\n        return this.tag.hide || false\n    }\n\n    /**\n     * true if required to compare two sets of tags\n     */\n    public get isCompare() : boolean {\n        return this.tag.compare || false\n    }\n\n    /**\n     * Dicom tag\n     */\n    public get dcmTag() : string {\n        return this.tag.tag\n    }\n\n    /**\n     * returns other tag values seen on this tag.\n     */\n    public get otherValues() : string [] {\n            return this.other;\n    }\n\n    public isSame(other:DicomTagValue) : boolean {\n        return this.tag === other.tag && this.val === other.val\n    }\n\n    public setValue(value : string ): boolean {\n        let doSet = true\n\n        const cnstr = vrConstrains.find((c)=>this.vr===c.vr)\n\n        if( cnstr ){\n            doSet = value.length <= cnstr.len\n            if(doSet && cnstr.isNumeric) {\n                const isNumeric = [...value].map((char)=>\"0123456789.+-Ee,\".includes(char)).reduce((prev,curr)=>prev&&curr,true)\n                doSet = isNumeric\n            }\n        }\n\n        if( doSet && this.tag.enumeratedValues ){\n            doSet = (this.tag.enumeratedValues.find((v)=>v===value) !== undefined)\n        }\n        if( doSet && this.vr === 'DA'){\n            // check that the value is a date in the forrm YYYYMMDD\n            let month = 0\n            let day =0\n            if(value.length===8){\n                month = parseInt(value.substr(4,2))\n                day = parseInt(value.substr(6,2))\n            }\n            doSet = month > 0 && month< 13 && day>0 && day <32\n        }\n        if( doSet ) this.val = value\n        return doSet\n    }\n\n    public addOtherValue(val:string) {\n        if( !this.other.includes(val)) this.other.push(val)\n    }\n\n}","import DicomDataset from \"./DicomDataset\";\nimport { DicomTagDefinition } from \"./DicomTags\";\nimport DicomTagValue from \"./DicomTagValue\";\n\n\nexport default class DicomTagList {\n\n    private list : DicomTagValue[]\n\n    constructor( dcm: DicomDataset, tags : DicomTagDefinition[] )  {\n        this.list = []\n        tags.forEach( tag =>{\n            let val = dcm.get(tag.tag)\n            if( val && val.Value && val.Value.length > 0 ) this.list.push( new DicomTagValue(tag, val.vr, val.Value[0].toString()))\n        })\n    }\n\n    public get valueList() : DicomTagValue [] {\n        return this.list\n    }\n\n    public isEqual( other : DicomTagList ) : boolean {\n        const thisList = this.list.filter(v=>v.isCompare)\n        const otherList= other.list.filter(v=>v.isCompare)\n        let iseq = otherList.length === thisList.length\n        if( iseq ){\n            let res =  thisList.map((val)=> otherList.find((oVal)=>oVal.isSame(val)))\n            iseq = !res.some((v)=> !v)\n        }\n        return iseq \n    }\n\n    public Modify( dcm: DicomDataset ){\n        for( const valueTag of this.valueList ) {\n            if( valueTag.isModified && dcm.has(valueTag.dcmTag) ) {\n                dcm.set(valueTag.dcmTag, valueTag.value)\n            }\n        }\n    }\n\n    public Merge(other:DicomTagList) : void {\n        other.list.forEach(val=>{\n            let el = this.list.find(v=>v.dcmTag===val.dcmTag)\n            if( el ){\n                if( el.value !== val.value) {\n                    el.addOtherValue(val.value) // track that there is a another value for this tag.\n                }\n            } else {\n                // not present and so we need to insert it\n                this.list.push(val)\n            }\n        })\n    }\n\n}","export interface DicomTagDefinition {\n    name : string\n    tag : string\n    enumeratedValues? : string []\n    hide? : boolean\n    compare? : boolean\n}\n\nconst PatientTags : DicomTagDefinition[] = [\n    {\n        name : \"Patient Name\",\n        tag : \"00100010\",\n        compare : true\n    },\n    {\n        name : \"Patient ID\",\n        tag : \"00100020\",\n        compare : true\n    },\n    {\n        name : \"Other Patient IDs\",\n        tag : \"00101000\"\n    },\n    {\n        name : \"Type of Patient ID\",\n        tag : \"00100022\"\n    },\n    {\n        name : \"Other Patient Names\",\n        tag : \"00101001\"\n    },\n    {\n        name : \"Patient's Birth Name\",\n        tag : \"00101005\"\n    },\n    {\n        name : \"Patient Mother's Birth Name\",\n        tag : \"00101060\"\n    },\n    {\n        name : \"Patient Age\",\n        tag : \"00101010\"\n    },\n    {\n        name : \"Patient's Occupation\",\n        tag : \"00102180\"\n    },\n    {\n        name : \"Confidentiality Constraint on Patient Data Description\",\n        tag : \"00103001\"\n    },\n    {\n        name : \"Patient's Birth Date\",\n        tag : \"00100030\"\n    },\n    {\n        name : \"Patient's Time\",\n        tag : \"00100032\"\n    },\n    {\n        name : \"Patient's Sex\",\n        tag : \"00100040\",\n        enumeratedValues : [\"M\",\"F\",\"O\"]\n    },\n    {\n        name : \"Quality Control Subject\",\n        tag : \"00100200\",\n        enumeratedValues : [\"YES\",\"NO\"]\n    },\n    {\n        name : \"Patient's Size\",\n        tag : \"00101020\"\n    },\n    {\n        name : \"Patient's Weight\",\n        tag : \"00101030\"\n    },\n    {\n        name : \"Patient's Address\",\n        tag : \"00101040\"\n    },\n    {\n        name : \"Patient's Comments\",\n        tag : \"00104000\"\n    },\n    {\n        name : \"Patient's Responsabile Person\",\n        tag : \"00102297\"\n    },\n    {\n        name : \"Patient's Responsabile Person Role\",\n        tag : \"00102298\",\n        enumeratedValues : [\"OWNER\",\"PARENT\",\"CHILD\",\"SPOUSE\",\"SIBLING\",\"RELATIVE\",\"GUARDIAN\",\"CUSTODIAN\",\"AGENT\"]\n    },\n    {\n        name : \"Patient's Responsible Organization\",\n        tag : \"00102299\"\n    },\n    {\n        name : \"Patient Species Description\",\n        tag : \"00102201\"\n    },\n    {\n        name : \"Patient Breed Description\",\n        tag : \"00102292\"\n    }\n]\n\nexport default PatientTags\n\nexport const StudyTags : DicomTagDefinition[] = [\n    {\n        name : \"Study Date\",\n        tag : \"00080020\"\n    },\n    {\n        name : \"Study Time\",\n        tag : \"00080030\"\n    },\n    {\n        name : \"Accession Number\",\n        tag : \"00080050\"\n    },\n    {\n        name : \"Referring Physician Name\",\n        tag : \"00080090\"\n    },\n    {\n        name : \"Consulting Physician Name\",\n        tag : \"0008009C\"\n    },\n    {\n        name : \"Study Description\",\n        tag : \"00081030\"\n    },\n    {\n        name : \"Physicians Of Record\",\n        tag : \"00081048\"\n    },\n    {\n        name : \"Name Of Physicians Reading Study\",\n        tag : \"00081060\"\n    },\n    {\n        name : \"StudyID\",\n        tag : \"00200010\"\n    },\n    {\n        name : \"Requesting Service\",\n        tag : \"00321033\"\n    },\n    {\n        name : \"Admitting Diagnoses Description\",\n        tag : \"00081080\"\n    },\n    {\n        name : \"Study Instance UID\",\n        tag : \"0020000D\",\n        hide : true,\n        compare: true\n    }\n]\n\nexport const SeriesTags : DicomTagDefinition[] = [\n    {\n        name : \"Series Date\",\n        tag : \"00080021\"\n    },\n    {\n        name : \"Series Time\",\n        tag : \"00080031\"\n    },\n    {\n        name : \"Modality\",\n        tag : \"00080060\"\n    },\n    {\n        name : \"Series Description\",\n        tag : \"0008103E\"\n    },\n    {\n        name : \"Performing Physician's Name\",\n        tag : \"00081050\"\n    },\n    {\n        name : \"Operators' Name\",\n        tag : \"00081070\"\n    },\n    {\n        name : \"Anatomical Orientation Type\",\n        tag : \"00102210\",\n        enumeratedValues : [\"BIPED\",\"QUADRUPED\"]\n    },\n    {\n        name : \"Body Part Examined\",\n        tag : \"00180015\"\n    },\n    {\n        name : \"Protocol Name\",\n        tag : \"00181030\"\n    },\n    {\n        name : \"Patient Position\",\n        tag : \"00185100\"\n    },\n    {\n        name : \"Series Number\",\n        tag : \"00200011\"\n    },\n    {\n        name : \"Laterality\",\n        tag : \"00200060\"\n    },\n    {\n        name : \"Smallest Pixel Value in Series\",\n        tag : \"00280108\"\n    },\n    {\n        name : \"Largest Pixel Value in Series\",\n        tag : \"00280109\"\n    },\n    {\n        name : \"Performed Procedure Step Start Date\",\n        tag : \"00400244\"\n    },\n    {\n        name : \"Performed Procedure Step Start Time\",\n        tag : \"00400245\"\n    },\n    {\n        name : \"Performed Procedure Step End Date\",\n        tag : \"00400250\"\n    },\n    {\n        name : \"Performed Procedure Step End Time\",\n        tag : \"00400251\"\n    },\n    {\n        name : \"Performed Procedure Step ID\",\n        tag : \"00400253\"\n    },\n    {\n        name : \"Performed Procedure Step Description\",\n        tag : \"00400254\"\n    },\n    {\n        name : \"Comments on the Performed Procedure Step\",\n        tag : \"00400280\"\n    },\n    {\n        name : \"Series Instance UID\",\n        tag : \"0020000E\",\n        hide: true,\n        compare:true\n    },\n    {\n        name: \"Manufacturer\",\n        tag: \"00080070\"\n    },\n    {\n        name: \"Station Name\",\n        tag: \"00081010\"       \n    },\n    {\n        name:\"Institution Name\",\n        tag:\"00080080\"\n    },\n    {\n        name:\"Institution Address\",\n        tag:\"00080081\" \n    },\n    {\n        name:\"Manufacturer's Model Name\",\n        tag:\"00081090\" \n    },\n    {\n        name:\"Device Serial Number\",\n        tag:\"00181000\" \n    },\n    {\n        name:\"Device UID\",\n        tag:\"00181002\" \n    },\n    {\n        name:\"Gantry ID\",\n        tag:\"00181008\" \n    },\n    {\n        name:\"Manufacturer's Device Class UID\",\n        tag:\"0018100B\" \n    },\n    {\n        name:\"Software Versions\",\n        tag:\"00181020\"\n    },\n    {\n        name:\"Spatial Resolution\",\n        tag:\"00181050\"\n    },\n    {\n        name:\"Date of Last Calibration\",\n        tag:\"00181200\"\n    },\n    {\n        name:\"Time of Last Calibration\",\n        tag:\"00181201\"\n    },\n    {\n        name:\"Pixel Padding Value\",\n        tag:\"0028,0120\"\n    },\n    {\n        name:\"Derivation Description\",\n        tag:\"00082111\"\n    }\n]\n\n\nexport const ImageTags : DicomTagDefinition [] = [\n    {\n        name : \"Image Type\",\n        tag : \"00080008\"\n    },\n    {\n        name : \"Acquisition Date\",\n        tag : \"00080022\"\n    },\n    {\n        name : \"Content Date\",\n        tag : \"00080023\"\n    },\n    {\n        name : \"Acquisition DateTime\",\n        tag : \"0008002A\"\n    },\n    {\n        name : \"Acquisition Time\",\n        tag : \"00080032\"\n    },\n    {\n        name : \"Content Time\",\n        tag : \"00080033\",\n    },\n    {\n        name : \"Irradiation Event UID\",\n        tag : \"00083010\"\n    },\n    {\n        name : \"Acquisition Number\",\n        tag : \"00200012\"\n    },\n    {\n        name : \"Patient Orientation\",\n        tag : \"00200020\"\n    },\n    {\n        name : \"Image Laterality\",\n        tag : \"00200062\"\n    },\n    {\n        name : \"Images in Acquisition\",\n        tag : \"00201002\"\n    },\n    {\n        name : \"Image Comments\",\n        tag : \"00204000\"\n    },\n    {\n        name : \"Quality Control Image\",\n        tag : \"00280300\"\n    },\n    {\n        name : \"Burned In Annotation\",\n        tag : \"0028,0301\"\n    },\n    {\n        name : \"Recognizable Visual Features\",\n        tag : \"0028,0302\",\n        enumeratedValues: [\"YES\",\"NO\"]\n    },\n    {\n        name : \"Lossy Image Compression\",\n        tag : \"0028,2110\",\n        enumeratedValues: [\"00\",\"01\"]\n    },\n    {\n        name : \"Lossy Image Compression Ratio\",\n        tag : \"00282112\"\n    },\n    {\n        name : \"Lossy Image Compression Method\",\n        tag : \"00282114\"\n    },\n    {\n        name : \"Presentation LUT Shape\",\n        tag : \"20500020\",\n        enumeratedValues:[\"IDENTITY\",\"INVERSE\"]\n    },\n    {\n        name : \"Samples per Pixel\",\n        tag : \"00280002\"\n    },\n    {\n        name : \"Photometric Interpretation\",\n        tag : \"00280004\",\n        enumeratedValues:[\"MONOCHROME1\",\"MONOCHROME2\",\"PALETTE COLOR\",\"RGB\",\"HSV\",\"ARGB\",\"CMYK\",\"YBR_FULL\",\"YBR_FULL_422\",\"YBR_PARTIAL_422\",\"YBR_PARTIAL_420\",\"YBR_ICT\",\"YBR_RCT\"]\n    },\n    {\n        name : \"Planar Configuration\",\n        tag : \"00280006\"\n    },\n    {\n        name : \"Rows\",\n        tag : \"00280010\"\n    },\n    {\n        name : \"Columns\",\n        tag : \"00280011\"\n    },\n    {\n        name : \"Pixel Aspect Ratio\",\n        tag : \"00280034\"\n    },\n    {\n        name : \"Bits Allocated\",\n        tag : \"00280100\"\n    },\n    {\n        name : \"Bits Stored\",\n        tag : \"00280101\"\n    },\n    {\n        name : \"High Bit\",\n        tag : \"00280102\"\n    },\n    {\n        name : \"Pixel Representation\",\n        tag : \"00280103\"\n    },\n    {\n        name : \"Smallest Image Pixel Value\",\n        tag : \"00280106\",\n    },\n    {\n        name : \"Largest Image Pixel Value\",\n        tag : \"00280107\"\n    },\n    {\n        name : \"Pixel Padding Range\",\n        tag : \"00280121\"\n    },\n    {\n        name : \"Red Palette Color Lookup Table Descriptor\",\n        tag : \"00281101\"\n    },\n    {\n        name : \"Green Palette Color Lookup Table Descriptor\",\n        tag : \"00281102\"\n    },\n    {\n        name : \"Blue Palette Color Lookup Table Descriptor\",\n        tag : \"00281103\"\n    },\n    {\n        name : \"Color Space\",\n        tag : \"00282002\"\n    },\n    {\n        name : \"Pixel Data Provider URL\",\n        tag : \"00287FE0\"\n    }\n\n]","const dcmjs = require(\"dcmjs\");\nconst { DicomMessage } = dcmjs.data;\n\n/**\n * Simple class to encapsulate the DICOM library\n */\n\nexport interface DicomEl {\n    Value : object[],\n    vr : string\n}\n\nexport default class DicomDataset {\n\n    private  dataset : any\n\n    constructor( inBuffer : ArrayBuffer ){\n        this.dataset = DicomMessage.readFile(inBuffer);\n    }\n\n    public get(tag:string) : DicomEl | undefined {\n        const dict = this.getDict(tag)\n        return dict[tag]\n    }\n\n    public set(tag:string,value:string) {\n        const dict = this.getDict(tag)\n        const el = dict[tag]\n        if( el ){\n            el.Value[0]=value\n        } else {\n            throw new Error('Not supported')\n        }\n    }\n\n    public has(tag:string) : boolean {\n        return this.getDict(tag)[tag] != null\n    }\n\n    public write() {\n        return this.dataset.write({allowInvalidVRLength: true, fragmentMultiframe: false}) as ArrayBuffer\n    }\n\n    private getDict(tag:string) : any {\n        const dict = tag.startsWith('0002') ? this.dataset.meta : this.dataset.dict\n        return dict\n    }\n\n}","export interface DicomUIDs {\n    studyUID : string,\n    seriesUID: string,\n    instanceUID : string\n}\n\nexport default class DicomUidReplacer {\n    private studyUIDs  = new Map<string,string>()\n    private seriesUIDs = new Map<string, string>()\n\n\n    replace({studyUID, seriesUID, instanceUID }: DicomUIDs) : DicomUIDs {\n        return {\n            studyUID : this.getStudyUID(studyUID),\n            seriesUID: this.getSeriesUID(seriesUID),\n            instanceUID: this.newUID(instanceUID)\n        }\n    }\n\n    private getStudyUID( uid : string ) : string {\n        if( !this.studyUIDs.has(uid)) {\n            this.studyUIDs.set(uid, this.newUID(uid))\n        }\n        return this.studyUIDs.get(uid)!\n    }\n\n    private getSeriesUID( uid : string ) : string {\n        if( !this.seriesUIDs.has(uid)) {\n            this.seriesUIDs.set(uid, this.newUID(uid))\n        }\n        return this.seriesUIDs.get(uid)!\n    }\n\n    private newUID  (uid:string) {\n        const time = (new Date()).getTime()\n        const rnd = Math.round(Math.random() * 1_000_000)\n        const tail= `${time}.${rnd}`\n        const head= uid.substr(0, 64-tail.length)\n        return head+tail\n    }\n\n}","import { FileWithPath } from \"file-selector\";\nimport { fixDigit, foreachImage, numberOfFiles } from \"../common/utils\";\nimport DicomTagList from \"./DicomTagList\";\nimport PatientTags, { ImageTags, SeriesTags, StudyTags } from \"./DicomTags\";\nimport DicomDataset from \"./DicomDataset\";\nimport DicomUidReplacer from \"./DicomUIDReplacer\";\nimport JSZip from \"jszip\";\n\nexport interface Progress {\n    done : number,\n    total: number\n}\nexport interface ImageInfo {\n    tags: DicomTagList,\n    files : FileWithPath []\n}\nexport interface SeriesInfo {\n    tags : DicomTagList,\n    images: ImageInfo[]\n}\nexport interface StudyInfo {\n    tags : DicomTagList,\n    series : SeriesInfo[]\n}\nexport interface PatientInfo {\n    tags : DicomTagList,\n    studies : StudyInfo []\n}\nexport interface DicomFilesInfo {\n    patients : PatientInfo[]\n}\nexport type ProgressCallback = ( progress : Progress ) => void\nexport type ProcessStages    = 'processing' | 'zipping'\nexport type ProcessCallback  = ( type : ProcessStages, progress : Progress) => void\n\nconst studyUIDTag   = '0020000D'\nconst seriesUIDTag  = '0020000E'\nconst mediaStUIDTag = '00020003'\nconst instanceUIDTag= '00080018'\nexport default class DicomEditor {\n\n    /**\n     * Extract \"known\" DICOM tag from a set of files\n     * @param files list of files selected by the user (dropped in the borowser)\n     * @param progress  progress callback\n     * @returns informationn of \"known\" Dicom tags, definition, vr and value.\n     */\n    static async Extact ( files : FileWithPath [], progress : ProgressCallback ) : Promise<DicomFilesInfo> {\n        let patients : PatientInfo [] = []\n\n        // filter out DICOMDIR -- they are valid DICOM files and they will be reported\n        files = files.filter((f)=>!f.name.endsWith('DICOMDIR'))\n        \n        for( let f=0; f<files.length; f++ ){\n            let data = await this.readFile(files[f])\n            if( this.sanityCheck(data)){\n                const dcm = new DicomDataset(data)\n                const pat = new DicomTagList(dcm, PatientTags)\n                const stu = new DicomTagList(dcm, StudyTags)\n                const ser = new DicomTagList(dcm, SeriesTags)\n                const img = new DicomTagList(dcm, ImageTags)\n                this.add(patients, pat, stu, ser, img, files[f])\n            }\n            progress({ done:f+1, total:files.length})\n        }\n\n        return {patients}\n    }\n\n    /**\n     * Modifies the file based on the input tag set\n     * @param info tags definition, which will include the modification which needs to be done.\n     * @param replaceUID true if all the UIDs needs to be replaced\n     * @param progress callback which will report the image generated and also he progress\n     */\n    static async Modify( info : DicomFilesInfo, replaceUID: boolean, progress : ProcessCallback ) : Promise<ArrayBuffer> {\n        const zip = new JSZip()\n        const repUID= new DicomUidReplacer()\n        const total = numberOfFiles(info.patients)\n        let count=0\n        for( const {patient, study, series, patIndex, stuIndex, serindex } of foreachImage(info.patients)){\n            let imgIndex =0\n            for( const image of series.images ){\n                for( const file of image.files) {\n                    const data = await this.readFile(file)\n                    const dcm  = new DicomDataset(data);\n                    patient.tags.Modify(dcm)\n                    study.tags.Modify(dcm)\n                    series.tags.Modify(dcm)\n                    image.tags.Modify(dcm)\n                    if( replaceUID ) DicomEditor.replaceUIDs(dcm, repUID);\n                    imgIndex++\n                    const outB = dcm.write()\n                    const filename = this.imageFilename(patIndex, stuIndex, serindex, imgIndex)\n                    zip.file(filename, outB, {binary:true,createFolders:true})\n                    await progress( 'processing', {total, done:++count})\n                }\n            }\n        }\n        const zipFile = await zip.generateAsync({type:'arraybuffer'},(meta)=>{\n            progress('zipping', {total:100, done : meta.percent })\n        })\n        return zipFile\n    } \n    static imageFilename(patIndex: number, stuIndex: number, serindex: number, imgIndex: number) {\n        return 'PAT'+fixDigit(patIndex,2)+'/'+\n               'STU'+fixDigit(stuIndex,2)+'/'+\n               'SER'+fixDigit(serindex,3)+'/'+\n               'IMG'+fixDigit(imgIndex,5)+'.dcm'\n    }\n\n    private static replaceUIDs(dcm: DicomDataset, repUID: DicomUidReplacer) {\n        const studyUID = dcm.get(studyUIDTag)!.Value[0].toString();\n        const seriesUID = dcm.get(seriesUIDTag)!.Value[0].toString();\n        const instanceUID = dcm.get(instanceUIDTag)!.Value[0].toString();\n        const newUIDs = repUID.replace({ studyUID, seriesUID, instanceUID });\n        dcm.set(studyUIDTag, newUIDs.studyUID);\n        dcm.set(seriesUIDTag, newUIDs.seriesUID);\n        dcm.set(instanceUIDTag, newUIDs.instanceUID);\n        dcm.set(mediaStUIDTag, newUIDs.instanceUID )\n    }\n\n    private static add( patients : PatientInfo[], pat : DicomTagList, stu : DicomTagList, ser : DicomTagList, img: DicomTagList, file : FileWithPath  ){\n        let patient = patients.find(p=>p.tags.isEqual(pat))\n        if( !patient ){\n            patient = { tags : pat, studies : [] }\n            patients.push(patient)\n        }\n        patient.tags.Merge(pat)\n\n        let study = patient.studies.find(s=>s.tags.isEqual(stu))\n        if(!study){\n            study= {tags : stu, series: []}\n            patient.studies.push(study)\n        }\n        study.tags.Merge(stu)\n\n        let series=study.series.find(s=>s.tags.isEqual(ser))\n        if(!series){\n            series = {tags:ser, images:[]}\n            study.series.push(series)\n        }\n        series.tags.Merge(ser)\n\n        let image = series.images.find(i=>i.tags.isEqual(img))\n        if(!image) {\n            image = {tags:img, files: []}\n            series.images.push(image)\n        }\n        image.tags.Merge(img)\n        image.files.push(file)\n    }\n\n    private static async  readFile ( file : FileWithPath ) : Promise<ArrayBuffer> {\n        return new Promise((res)=>{\n            let reader = new FileReader()\n            reader.onloadend = ()=> res(reader.result as ArrayBuffer)\n            reader.readAsArrayBuffer(file)\n        })\n    }\n\n    // Sanity check the file is a valid DICOM file\n    private static sanityCheck(data:ArrayBuffer) : boolean {\n        const view = new Uint8Array(data)\n        let isValid =  view.length > 131\n        if( isValid ){\n            isValid = view[128] === 0x44 && // D\n                      view[129] === 0x49 && // I\n                      view[130] === 0x43 && // C\n                      view[131] === 0x4d    // M\n        }\n        return isValid\n    }\n\n}","import * as React from 'react';\nimport LinearProgress, { LinearProgressProps } from '@material-ui/core/LinearProgress'\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box'\nimport { withStyles } from '@material-ui/core';\n\nconst ThickLinearProgress = withStyles({\n  root: {\n    height: 12,\n    borderRadius: 20\n  },\n  bar: {\n    borderRadius: 20,\n  },\n})(LinearProgress);\n\nexport default function LinearProgressWithLabel(props: LinearProgressProps & { value: number }) {\n  return (\n    <Box sx={{  display: 'flex', width: '80%', alignItems: 'center' }}>\n      <Box sx={{ width: '100%', mr: 1 }}>\n        <ThickLinearProgress variant=\"determinate\" {...props}/>\n      </Box>\n      <Box sx={{ minWidth: 35 }}>\n        <Typography className=\"text\">{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}","\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        width:'100%'\n    },\n    boldtext: {\n        fontWeight:'bolder', \n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    smallText:{\n        fontSize: 'small'\n    },\n    noPadding:{\n        padding:'0px'\n    },\n    rightMargin:{\n        marginRight:theme.spacing(2),\n    },\n    leftMargin:{\n        marginLeft:theme.spacing(2),\n    },\n    topBottomMarging :{\n        marginBottom: theme.spacing(1),\n        marginTop: theme.spacing(1),\n    },\n    topBottomPadding :{\n        paddingBottom: theme.spacing(2),\n        paddingTop: theme.spacing(2),\n    },\n    fullPage :  {    \n        position: 'absolute',\n        top : '0px',\n        left:'0px',  \n        width:'100%',\n        height:'100%',\n        borderWidth:'2px',\n        borderStyle: 'solid',\n        borderColor: theme.palette.primary.light,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n    }\n}))\n\nexport const patAvatar = {\n    name : \"Pat\",\n    color: \"#2196f3\"\n}\n\nexport const stuAvatar = {\n    name : \"Stu\",\n    color: \"#42a5f5\"  \n}\n\nexport const serAvatar = {\n    name : \"Ser\",\n    color: \"#64b5f6\"  \n}\n\nexport const imgAvatar = {\n    name : \"Img\",\n    color: \"#90caf9\"  \n}\n\nexport default useStyles;","import { Box } from \"@material-ui/core\";\nimport React from \"react\";\n\n\nexport interface HListProps {\n    align : 'left'| 'center' | 'right',\n    children: React.ReactNode\n}\nexport default function HList({align, children}:HListProps) {\n    return (\n        <Box sx={{  display: 'flex', width: '100%', alignItems: 'center', marginTop:'4px', marginBottom:'4px', justifyContent:`${align}` }}>\n            {children}\n        </Box>\n    )\n}","import React, {useState} from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Checkbox, Paper } from '@material-ui/core';\nimport useStyle from '../../AppStyle'\nimport HList from '../../components/hList'\n\ninterface AppHeaderProps  {\n    numDicomFiles : number,\n    onDownload: (replaceUIDs:boolean) => void\n}\n\nexport default function AppHeader( {numDicomFiles, onDownload }:AppHeaderProps){\n    const [checked, setChecked ] = useState<boolean>(true)\n    const classes = useStyle()\n    const onCheck = ()=> setChecked((v)=>!v)\n    const onClick = ()=> onDownload(checked)\n    return(\n        <Paper elevation={3} className={classes.paper} >\n            <HList align='center'>\n                <Typography color='primary'>Number of Image Files: </Typography>\n                <Typography className={`${classes.boldtext} ${classes.rightMargin}`}>{numDicomFiles}</Typography>\n                <Checkbox checked={checked} color=\"primary\" className={`${classes.noPadding} ${classes.leftMargin}`} onClick={onCheck} />\n                <Typography color='primary' className={classes.rightMargin}> replace current UIDs</Typography>\n                <Button variant=\"contained\" color=\"primary\" className={`${classes.topBottomMarging} ${classes.leftMargin}`} onClick={onClick}>  Download Images </Button>\n            </HList>\n        </Paper>\n    )\n}","import { Box } from \"@material-ui/core\";\nimport React from \"react\";\n\n\nexport interface VListProps {\n    children: React.ReactNode,\n    top? : number,\n    bottom? : number,\n    left? : number,\n    right? : number\n}\nexport default function VList({left, right, top, bottom, children}:VListProps) {\n    top    = top ?? 0\n    bottom = bottom ?? 0\n    left   = left ?? 0\n    right  = right ?? 0\n    return (\n        <Box sx={{display: 'flex', paddingLeft: `${left}px`, paddingRight: `${right}px`, paddingTop:`${top}px`, paddingBottom: `${bottom}px`, flexDirection:'column', alignItems: 'flexend', justifyContent:'center', width:'100%', boxSizing:'border-box'}}>\n            {children}\n        </Box>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n    expand: {\n        transform: 'rotate(0deg)',\n        transition: theme.transitions.create('transform', {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n      expandOpen: {\n        transform: 'rotate(180deg)',\n      }\n}));\n\ninterface CollapseButtonProps {\n    onExpand : (isOpen:boolean)=>void,\n    className?: string\n    size? : 'large' | 'small' | 'medium'\n}\nexport default function  CollapseButton ({onExpand,className,size}:CollapseButtonProps) {\n    const [checked, setChecked] = React.useState(false);\n    const classes = useStyles()\n    const handleExpandClick = () => {\n        onExpand(!checked)\n        setChecked(!checked);\n      };\n    return (\n        <IconButton\n            className={clsx(classes.expand+' '+className, {\n                [classes.expandOpen]: checked,\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={checked}\n            aria-label=\"show more\"\n        >\n          <ExpandMoreIcon color='primary' fontSize={size}/>\n        </IconButton>\n    )\n}\n\n\n\n","\nimport React, {useState} from \"react\";\nimport { InputAdornment, TextField } from \"@material-ui/core\";\nimport DicomTagValue from \"../../../dicom/DicomTagValue\";\nimport CommentOutlinedIcon from '@material-ui/icons/CommentOutlined';\nimport Tooltip from '@material-ui/core/Tooltip';\n\ninterface TagValueProps {\n    tag : DicomTagValue\n}\nexport default function TagValue({tag}:TagValueProps) {\n    const [error, setError]=useState<boolean>(false)\n\n    const onValueChange = (value:string)=>{\n        let isValid = tag.setValue(value.trim())\n        setError(!isValid)\n    }\n    const otherValues = tag.otherValues.join(',')\n    return (\n        <TextField\n          id=\"standard-helperText\"\n          label={tag.name}\n          defaultValue={tag.value ? tag.value: \" \"}\n          variant=\"outlined\"\n          style={{width:'100%'}}\n          onChange={(e)=>onValueChange(e.target.value)}\n          error = {error}\n          InputProps={{\n            endAdornment: otherValues.length ? (\n              <InputAdornment position=\"end\">\n                <Tooltip title={`other values : ${otherValues}`}>\n                    <CommentOutlinedIcon />\n                </Tooltip>\n              </InputAdornment>\n            ) : <></>,\n          }}\n\n        />\n    )\n}","import React from 'react'\nimport Typography from \"@material-ui/core/Typography\";\nimport { Avatar, Box, Collapse, Grid, Hidden, Paper } from '@material-ui/core';\nimport useStyle from '../../../AppStyle'\nimport HList from '../../../components/hList'\nimport CollapseButton from '../../../components/collapseButton'\nimport TagValue from './tagValue';\nimport VList from '../../../components/vList'\nimport DicomTagList from '../../../dicom/DicomTagList';\n\ninterface TagListProp {\n    tags: DicomTagList,\n    subItemText : string,\n    subItemNum  : number, \n    children: React.ReactNode,\n    avatarText : string,\n    avatarColor: string\n}\n\nexport default function TagList({tags, subItemText, subItemNum, children,avatarText, avatarColor}:TagListProp){\n    const [collapsed, setCollapsed] = React.useState(false);\n    const classes = useStyle()\n    return (\n        <Paper elevation={2} className={`${classes.paper} ${classes.topBottomPadding}, ${classes.topBottomMarging}`} >\n            <Box sx={{  display: 'flex', width: '100%', alignItems: 'flex-start',  marginTop:'8px', marginLeft:'8px' }}>\n                <Hidden xsDown >\n                    <Avatar style={{backgroundColor:`${avatarColor}`}}>{avatarText}</Avatar> \n                </Hidden>\n                <VList left={8} right={8} bottom={0}>\n                    <Grid container spacing={1} style={{ paddingRight:'4px'}}>\n                        { tags.valueList.filter(v=>!v.isHidden).map ((v,index) => (\n                            <Grid item key={index} style={{ flex:'1 1 content' }} >\n                                <TagValue tag={v}/>\n                            </Grid>\n                        ))}\n                    </Grid>\n                    <HList align='left'>\n                        <Typography color='primary' className={`${classes.smallText} ${classes.leftMargin}`}>{subItemText}</Typography>\n                        <Typography color='primary' className={`${classes.boldtext} ${classes.smallText}`}>{subItemNum}</Typography>\n                        <CollapseButton onExpand={(value)=>setCollapsed(value)} className={classes.noPadding}/>\n                    </HList>\n                    <Collapse in={collapsed}>\n                        {children}\n                    </Collapse>\n                </VList> \n            </Box>\n        </Paper>\n    )\n}","import React from 'react'\nimport Typography from \"@material-ui/core/Typography\";\nimport { ImageInfo } from '../../../dicom/DicomEditor';\nimport useStyles, {imgAvatar} from '../../../AppStyle';\nimport TagList from './tagList'\n\n\ninterface ImageProp {\n    image : ImageInfo\n}\n\nexport default function Series({image}:ImageProp) {\n    const classes = useStyles();\n    return (\n        <TagList tags={image.tags} subItemText='Number of Files:' subItemNum={image.files.length} avatarColor={`${imgAvatar.color}`} avatarText={imgAvatar.name}>\n            <Typography color='primary' className={`${classes.smallText} ${classes.leftMargin}`} style={{textAlign:'left'}} >\n                {image.files.map((f,i)=>`${i>0 ? ', ': ''}${f.name}`)} \n            </Typography>\n        </TagList>\n    )\n}","import React from 'react'\nimport { SeriesInfo } from '../../../dicom/DicomEditor';\nimport TagList from './tagList'\nimport VList from '../../../components/vList';\nimport {serAvatar} from '../../../AppStyle';\nimport Image from './image'\n\n\ninterface SeriesProp {\n    series : SeriesInfo\n}\n\nexport default function Series({series}:SeriesProp) {\n    return (\n        <TagList tags={series.tags} subItemText='Number of Images:' subItemNum={series.images.reduce((s,i)=>s+i.files.length,0)} avatarColor={`${serAvatar.color}`} avatarText={serAvatar.name}>\n            <VList left={8} right={8} >\n            {\n                series.images.map((image,i) => <Image image={image} key={i} />)\n            }\n            </VList>\n        </TagList>\n    )\n}\n\n","import React from 'react'\nimport VList from '../../../components/vList';\nimport { StudyInfo } from '../../../dicom/DicomEditor';\nimport Series from './series';\nimport {stuAvatar} from '../../../AppStyle';\nimport TagList from './tagList'\n\ninterface StudyProp {\n    study : StudyInfo\n}\n\nexport default function Study({study}:StudyProp) {\n    return(\n        <TagList tags={study.tags} subItemText='Number of Series:' subItemNum={study.series.length} avatarColor={`${stuAvatar.color}`}  avatarText={stuAvatar.name}>\n            <VList left={8} right={8} >\n            {\n                study.series.map((series,i) => <Series series={series} key={i} />)\n            }\n            </VList>\n        </TagList>\n    )\n}","import React from 'react'\nimport VList from '../../../components/vList'\nimport { PatientInfo } from '../../../dicom/DicomEditor';\nimport Study from './study';\nimport {patAvatar} from '../../../AppStyle';\nimport TagList from './tagList'\n\ninterface PatientProp {\n    patient : PatientInfo\n}\n\nexport default function Patient({patient}:PatientProp){\n    return (\n        <TagList tags={patient.tags} subItemText='Number of Studies:' subItemNum={patient.studies.length} avatarColor={`${patAvatar.color}`}  avatarText={patAvatar.name}>\n            <VList left={8} right={8} >\n            {\n                patient.studies.map((study,i) => <Study study={study} key={i} />)\n            }\n            </VList>\n        </TagList>\n    )\n}\n\n","import React from 'react'\nimport { Paper } from '@material-ui/core';\nimport useStyle from '../../../AppStyle'\nimport Patient from './patient';\nimport VList from '../../../components/vList';\nimport { PatientInfo } from '../../../dicom/DicomEditor';\n\ninterface PatientListProp {\n    patients : PatientInfo[]\n}\n\nexport default function PatientList( {patients} : PatientListProp){\n    const classes = useStyle()\n    return (\n        <Paper elevation={3} className={`${classes.paper} ${classes.topBottomPadding}`} >\n            <VList left={8} right={8} >\n                {\n                    patients.map((pat,i) => <Patient patient={pat} key={i} />)\n                }\n            </VList>\n        </Paper>\n      );\n}","\nimport React,  { useCallback, useState }  from 'react'\nimport { DicomFilesInfo, ProcessStages, Progress } from '../../dicom/DicomEditor';\nimport { Container, Typography } from '@material-ui/core';\nimport useStyle from '../../AppStyle'\nimport AppHeader from './appHeader';\nimport PatientList from './parts/patientList';\nimport DicomEditor from '../../dicom/DicomEditor'\nimport { numberOfFiles } from '../../common/utils'\nimport LinearProgressWithLabel from '../../components/linearProgressWithLabel';\n\ntype AppResultParam = DicomFilesInfo\nconst processingLabel = \"Processing ...\"\nconst zippingLabel = \"Zipping ...\"\n\nexport default function AppResults (dcmInfo:AppResultParam) {\n    const [label, setLabel]=useState<string>(processingLabel)\n    const [downloading, setDownloading]=useState<boolean>(false)\n    const [progress, setProgress]=useState<Progress>({done:0, total:0})\n    const classes = useStyle()\n\n    const onDownload = useCallback((replaceUID:boolean)=> {\n        setDownloading(true)\n        const cleanUp=(url:string) => setTimeout(()=>URL.revokeObjectURL(url),1000)\n        DicomEditor.Modify(dcmInfo, replaceUID,  (mode :ProcessStages, progress : Progress )=>{\n            setLabel( mode === 'processing' ? processingLabel : zippingLabel)\n            setProgress(progress)\n        }).then((zip:ArrayBuffer)=>{\n            var blob = new Blob([zip], {type: 'application/octet-stream'});\n            const bURL = URL.createObjectURL(blob)\n            let link = document.createElement('a') \n            link.setAttribute('download', `images.zip`)\n            link.setAttribute('href', bURL)\n            link.click() \n            cleanUp(bURL)\n            setDownloading(false)\n        })\n\n    },[setProgress,setLabel,dcmInfo])\n\n    return (\n        <Container maxWidth='xl'>\n            {\n                downloading ?\n                <>\n                    <div className={classes.fullPage}>\n                        <Typography color='primary' variant='h2' className=\"text\"> {label} </Typography>\n                        <LinearProgressWithLabel value={100*progress.done/progress.total} />\n                    </div>\n                </>:\n                <>\n                    <AppHeader numDicomFiles={numberOfFiles(dcmInfo.patients)} onDownload={onDownload} />\n                    <PatientList patients={dcmInfo.patients}/>\n                </>\n            }\n\n        </Container>\n    )\n\n}","import React, {useState, useCallback} from 'react'\nimport { useDropzone } from \"react-dropzone\"\nimport { FileWithPath } from \"file-selector\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport Typography from '@material-ui/core/Typography';\nimport DicomEditor, { DicomFilesInfo, Progress } from '../../dicom/DicomEditor';\nimport LinearProgressWithLabel from '../../components/linearProgressWithLabel';\nimport AppResults from './appResults';\nimport { numberOfFiles } from '../../common/utils';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n            width:'100%',\n            height:'100%',\n            padding:'4px'\n        },\n        drop :{\n            width:'100%',\n            height:'100%',\n            borderWidth:'2px',\n            borderStyle: 'dotted',\n            borderColor: theme.palette.primary.light,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexDirection: 'column',\n            \"&:hover\": {\n                borderColor: theme.palette.primary.dark\n              },\n            \"& .AddIcn\" :{\n                fontSize:80,\n                color: theme.palette.primary.light\n            },\n            \"&:hover .AddIcn\" :{\n                fontSize:80,\n                color: theme.palette.primary.dark\n            },\n            \"& .text\" :{\n            textAlign:'center',\n            color:theme.palette.primary.light \n            },\n            \"&:hover .text\" :{\n                textAlign:'center',\n                color:theme.palette.primary.dark \n            }\n        },\n        noDisplay : {\n            display:'none'\n        }\n    }))\n\n\n    export default function AppMain(){\n        const classes = useStyles();\n        const [progress, setProgress] = useState<Progress>({done:0,total:0})\n        const [dicomFilesInfo, setDicomFilesInfo] = useState<DicomFilesInfo|null>(null)\n        const [error, setError] = useState<string|null>(null)\n\n        const onDrop = useCallback(async (files: FileWithPath[]) =>  {\n            setDicomFilesInfo(null)\n            const progress  = (p:Progress)=>setProgress(p)\n            const info = await DicomEditor.Extact(files, progress)\n            if( numberOfFiles(info.patients)>0 ) {\n                setDicomFilesInfo(info)\n            } else {\n                setError(`The ${files.length} file selected are not valid DICOM files`)\n            }\n            setProgress({done:0,total:0})\n        }, [setError, setProgress]) \n\n        const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n        return (\n            <div className={classes.root}>\n                    <div {...getRootProps()} className={classes.root} test-id='drop-div'>\n                            <div className={ isDragActive ? classes.drop : classes.noDisplay} test-id='drop-active-div'>\n                                <ArrowDownwardIcon className=\"AddIcn\"/>\n                                <Typography className=\"text\">Drop the file here.</Typography>\n                            </div> \n                            {\n                                dicomFilesInfo !== null ?\n                                <>\n                                    <AppResults {...dicomFilesInfo} />\n                                </> :\n                                progress.total > 0 ?\n                                <>\n                                    <div className={classes.drop}>\n                                        <Typography color='primary' variant='h2' className=\"text\"> Loading ... </Typography>\n                                        <LinearProgressWithLabel value={100*progress.done/progress.total} />\n                                    </div>\n                                </> :\n                                <div className={isDragActive ? classes.noDisplay : classes.drop} test-id='drop-inactive-div'>\n                                    <input {...getInputProps()} />\n                                    <AddIcon className=\"AddIcn\"/>\n                                    {\n                                        error !== null ?\n                                        <>\n                                            <Typography className=\"text\">🖐 {error}</Typography>\n                                        </> :\n                                        <></>\n                                    }   \n                                    <>\n                                        <Typography className=\"text\">Drag and Drop here your DICOM files or folders here.</Typography>\n                                        <Typography className=\"text\">or click here to select the files.</Typography>\n                                    </>\n                                </div> \n                            }\n                    </div>\n            </div>\n        )\n    }\n","import React from \"react\";\nimport gitVersion from '../../tools/gitInfo.json'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    version: {\n        position: 'fixed', \n        left: '2px', \n        bottom: '0px',\n        fontSize : '12px',\n        color : theme.palette.primary.main,\n        transform: 'rotate(-90deg)',\n        transformOrigin: '0 0'\n    },\n    ribbon :{\n        position: 'fixed', \n        right: '0px', \n        top: '0px'\n    }\n}))\n\n\ntype gitInfoProps = { label : string, baseURL? : string, forkme : Boolean }\n\nconst  AppVersion = ({label, baseURL, forkme}:gitInfoProps) => {\n        const classes = useStyles();\n        const handleClick = () => {\n            if( baseURL && gitVersion.long !== \"\" )  window.location.href = baseURL+'/tree/'+gitVersion.long;\n        }\n        return ( \n            <>\n            {forkme && baseURL && (\n                <div className={classes.ribbon}> \n                    <a href={baseURL}>\n                        <img width=\"100\" height=\"100\" src=\"https://github.blog/wp-content/uploads/2008/12/forkme_right_red_aa0000.png?resize=100%2C100\" alt=\"Fork me on GitHub\"/>\n                    </a>\n                </div>\n            ) }\n            <div className={classes.version} onClick={handleClick}>\n                <p>{label + gitVersion.version}</p>\n            </div>\n            </>\n        )\n}\n\nexport default AppVersion;","import React from \"react\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport AppMain from  './features/appMain/appMain';\nimport {\n  createTheme,\n  withStyles,\n  createStyles,\n  Theme,\n  WithStyles,\n  StyleRules\n} from \"@material-ui/core/styles\";\nimport {\n  MuiThemeProvider,\n  CssBaseline,\n  Hidden,\n} from \"@material-ui/core\";\nimport AppVersion from \"./features/appVersion/appVersion\";\n\n\nconst theme = createTheme({\n  palette: {\n    primary: blue,\n    secondary: {\n      main: \"#fff\"\n    },\n    background: {\n      default: \"#fff\"\n    }\n  }\n});\n\nconst styles: (theme: Theme) => StyleRules<string> = theme =>\n  createStyles({\n    app: {\n      textAlign: \"center\"\n    },\n    main :{\n      position:'absolute',\n      top:'0px',\n      right: '0px',\n      left:'0px',\n      bottom: '0px',\n      background : 'white',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  });\n\ntype AppProps = {} & WithStyles<typeof styles>;\nconst App = ({ classes }: AppProps) => (\n  <MuiThemeProvider theme={theme}>\n    <CssBaseline />\n    <div className={classes.app}>\n      <div className={classes.main}>\n        <AppMain />\n      </div>\n      <Hidden smDown >\n        <AppVersion label=\"version : \" forkme={true} baseURL=\"https://github.com/VittorioAccomazzi/DicomEditor\" />\n      </Hidden>\n    </div>\n  </MuiThemeProvider>\n);\n\nexport default withStyles(styles)(App);\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\n\n\nexport const store = configureStore({\n  reducer: {\n\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport GA4React from 'ga-4-react'\n\nconst timeout = 30000 // millisecond.\nconst ga4react = new GA4React(\"G-GCL436FGEE\", undefined, undefined, timeout);\n\nconst main = async ()=>{\n  await ga4react.initialize();\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n}\n\n// Start the appliction\nmain()\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}